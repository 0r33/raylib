name: Windows

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        compiler: [mingw-w64, msvc16]
        bits: [32, 64]
        include:
        - compiler: mingw-w64
          bits: 32
          ARCH: "x86"  
        - compiler: mingw-w64
          bits: 64
          ARCH: "x64"
        - compiler: msvc16
          bits: 32
          ARCH: "x86"
          VSBINPATH: "Win32" 
        - compiler: msvc16
          bits: 64
          ARCH: "x64" 
          VSBINPATH: "x64"
          
    env:
      RELEASE_NAME: raylib-3.1_win${{ matrix.bits }}_${{ matrix.compiler }}

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup Environment
      run: | 
        dir
        mkdir build
        cd build
        mkdir ${{ env.RELEASE_NAME }}
        cd ${{ env.RELEASE_NAME }}
        mkdir include
        mkdir lib
        dir
        cd ../../../raylib
        dir

    # Setup MSBuild.exe path if required
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.1
      if: matrix.compiler == 'msvc16'
   
    - name: Build Library (MinGW-w64)
      run: |
        cd src
        gcc -v
        make PLATFORM=PLATFORM_DESKTOP CC=gcc RAYLIB_BUILD_ARCH=${{ matrix.ARCH }} RAYLIB_LIBTYPE=STATIC RAYLIB_RELEASE_PATH="../${{ env.RELEASE_NAME }}/lib"
        dir
        cd ..
        dir build
      shell: cmd
      if: matrix.compiler == 'mingw-w64'
      
    - name: Build Library (MSVC16)
      run: |
        cd projects/VS2017
        msbuild.exe raylib.sln /target:raylib /property:Configuration=Release /property:Platform=${{ matrix.ARCH }}
        copy /Y .\bin\${{ matrix.VSBINPATH }}\Release\raylib.lib .\..\..\build\${{ env.RELEASE_NAME }}\lib\raylib.lib
        msbuild.exe raylib.sln /target:raylib /property:Configuration=Release.DLL /property:Platform=${{ matrix.ARCH }}
        copy /Y .\bin\${{ matrix.VSBINPATH }}\Release.DLL\raylib.dll .\..\..\build\${{ env.RELEASE_NAME }}\lib\raylib.dll
        copy /Y .\bin\${{ matrix.VSBINPATH }}\Release.DLL\raylib.lib .\..\..\build\${{ env.RELEASE_NAME }}\lib\raylibdll.lib
        cd ../..
      shell: cmd
      if: matrix.compiler == 'msvc16'
      
    - name: Generate Artifacts
      run: |
        copy /Y .\src\raylib.h .\build\${{ env.RELEASE_NAME }}\include\raylib.h
        cd build
        7z a ./${{ env.RELEASE_NAME }}.zip ./${{ env.RELEASE_NAME }}
        dir
      shell: cmd
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.RELEASE_NAME }}.zip
        path: ./build/${{ env.RELEASE_NAME }}.zip
